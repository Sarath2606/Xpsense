{"ast":null,"code":"import _objectSpread from\"C:/Users/sarat/OneDrive/Desktop/Xpenses/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/utils/calculations.js\nexport const calculateMetrics=transactions=>{const currentMonth=new Date().getMonth();const currentYear=new Date().getFullYear();const currentMonthTransactions=transactions.filter(t=>{const transactionDate=new Date(t.date);return transactionDate.getMonth()===currentMonth&&transactionDate.getFullYear()===currentYear;});const income=currentMonthTransactions.filter(t=>t.amount>0).reduce((sum,t)=>sum+t.amount,0);const expenses=Math.abs(currentMonthTransactions.filter(t=>t.amount<0).reduce((sum,t)=>sum+t.amount,0));const balance=transactions.reduce((sum,t)=>sum+t.amount,0);// Calculate percentage changes (mock data for demo)\nconst incomeChange=24;const expenseChange=-12;return{balance,income,expenses,incomeChange,expenseChange};};export const getCategoryInfo=(categories,categoryId)=>{return categories.find(cat=>cat.id===categoryId)||{name:'Other',icon:'❓',color:'bg-gray-100',type:'expense'};};export const filterTransactions=(transactions,searchTerm,filterCategory,categories)=>{return transactions.filter(transaction=>{const matchesSearch=transaction.name.toLowerCase().includes(searchTerm.toLowerCase())||transaction.description.toLowerCase().includes(searchTerm.toLowerCase());const categoryInfo=getCategoryInfo(categories,transaction.categoryId);const matchesCategory=filterCategory==='all'||categoryInfo.type===filterCategory||transaction.categoryId.toString()===filterCategory;return matchesSearch&&matchesCategory;}).sort((a,b)=>new Date(b.date)-new Date(a.date));};export const calculateCategorySpending=(transactions,categories)=>{const expenseCategories=categories.filter(cat=>cat.type==='expense');const totalExpenses=Math.abs(transactions.filter(t=>t.amount<0).reduce((sum,t)=>sum+t.amount,0));return expenseCategories.map(category=>{const categoryTransactions=transactions.filter(t=>t.categoryId===category.id&&t.amount<0);const categoryTotal=Math.abs(categoryTransactions.reduce((sum,t)=>sum+t.amount,0));const percentage=totalExpenses>0?categoryTotal/totalExpenses*100:0;return _objectSpread(_objectSpread({},category),{},{total:categoryTotal,percentage:percentage.toFixed(1),transactionCount:categoryTransactions.length});}).filter(cat=>cat.total>0).sort((a,b)=>b.total-a.total);};","map":{"version":3,"names":["calculateMetrics","transactions","currentMonth","Date","getMonth","currentYear","getFullYear","currentMonthTransactions","filter","t","transactionDate","date","income","amount","reduce","sum","expenses","Math","abs","balance","incomeChange","expenseChange","getCategoryInfo","categories","categoryId","find","cat","id","name","icon","color","type","filterTransactions","searchTerm","filterCategory","transaction","matchesSearch","toLowerCase","includes","description","categoryInfo","matchesCategory","toString","sort","a","b","calculateCategorySpending","expenseCategories","totalExpenses","map","category","categoryTransactions","categoryTotal","percentage","_objectSpread","total","toFixed","transactionCount","length"],"sources":["C:/Users/sarat/OneDrive/Desktop/Xpenses/src/utils/calculations_js.js"],"sourcesContent":["// src/utils/calculations.js\n\nexport const calculateMetrics = (transactions) => {\n  const currentMonth = new Date().getMonth();\n  const currentYear = new Date().getFullYear();\n  \n  const currentMonthTransactions = transactions.filter(t => {\n    const transactionDate = new Date(t.date);\n    return transactionDate.getMonth() === currentMonth && transactionDate.getFullYear() === currentYear;\n  });\n\n  const income = currentMonthTransactions.filter(t => t.amount > 0).reduce((sum, t) => sum + t.amount, 0);\n  const expenses = Math.abs(currentMonthTransactions.filter(t => t.amount < 0).reduce((sum, t) => sum + t.amount, 0));\n  const balance = transactions.reduce((sum, t) => sum + t.amount, 0);\n\n  // Calculate percentage changes (mock data for demo)\n  const incomeChange = 24;\n  const expenseChange = -12;\n\n  return { balance, income, expenses, incomeChange, expenseChange };\n};\n\nexport const getCategoryInfo = (categories, categoryId) => {\n  return categories.find(cat => cat.id === categoryId) || { \n    name: 'Other', \n    icon: '❓', \n    color: 'bg-gray-100',\n    type: 'expense' \n  };\n};\n\nexport const filterTransactions = (transactions, searchTerm, filterCategory, categories) => {\n  return transactions.filter(transaction => {\n    const matchesSearch = transaction.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         transaction.description.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const categoryInfo = getCategoryInfo(categories, transaction.categoryId);\n    const matchesCategory = filterCategory === 'all' || \n                           categoryInfo.type === filterCategory ||\n                           transaction.categoryId.toString() === filterCategory;\n    \n    return matchesSearch && matchesCategory;\n  }).sort((a, b) => new Date(b.date) - new Date(a.date));\n};\n\nexport const calculateCategorySpending = (transactions, categories) => {\n  const expenseCategories = categories.filter(cat => cat.type === 'expense');\n  const totalExpenses = Math.abs(transactions.filter(t => t.amount < 0).reduce((sum, t) => sum + t.amount, 0));\n  \n  return expenseCategories.map(category => {\n    const categoryTransactions = transactions.filter(t => t.categoryId === category.id && t.amount < 0);\n    const categoryTotal = Math.abs(categoryTransactions.reduce((sum, t) => sum + t.amount, 0));\n    const percentage = totalExpenses > 0 ? (categoryTotal / totalExpenses * 100) : 0;\n    \n    return {\n      ...category,\n      total: categoryTotal,\n      percentage: percentage.toFixed(1),\n      transactionCount: categoryTransactions.length\n    };\n  }).filter(cat => cat.total > 0).sort((a, b) => b.total - a.total);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}